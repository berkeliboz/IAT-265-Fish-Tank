

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Scanner;

import javax.swing.JFrame;


public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    
    private static String choosenClassName = "_";
    
    public static void setChoosenString( String newStr){
        choosenClassName = newStr;
    }
    
    public static String getChoosenString(){
        return choosenClassName;
    }
    
    public mainFrame() {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);						//Exits the program when closed
	this.setSize(1920,1080);													//Set frame resolution to 1080p (1920x1080)
	ControlPanel controlPanel = new ControlPanel();
        Dimension panelSize = this.getSize();										//Creates a Dimension type object to pass the screen size values
	EnviromentPanel animPanel = new EnviromentPanel(panelSize,controlPanel);					//Panel size is subject to change
	
	setPreferredSize(panelSize);
		
        
                
		
		
	setLayout(new BorderLayout());
		
	add(animPanel);																//Panel is added
	add(controlPanel,BorderLayout.EAST);
 
	this.setVisible(true);														//Sets the panel visible
		
        
        initComponents();
        
        frameTickDialog.setSize(400,200);
        frameTextField.setFocusable(false);
        fpsSliderDialog.setSize(235, 150);
        fpsLabel.setText("Each Frame Rendered in " + String.valueOf(jSlider1.getValue())+ " ms");
        
    }

    public void changeRes(int x,int y){this.setSize(x,y);}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameTickDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        frameTextField = new javax.swing.JTextField();
        fpsSliderDialog = new javax.swing.JDialog();
        jSlider1 = new javax.swing.JSlider(0,400,33);
        fpsLabel = new javax.swing.JLabel();
        defaultButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        posDialog = new javax.swing.JDialog();
        yPos = new javax.swing.JSlider();
        xPos = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        exitButton = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        addFishButton = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        fpsMenu = new javax.swing.JMenu();
        increaseFPSButton = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        openFPSSlider = new javax.swing.JMenuItem();

        frameTickDialog.getContentPane().setLayout(new java.awt.FlowLayout());

        jLabel1.setText("Frame Delay Increased To");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        frameTextField.setText("33");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(frameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(frameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        frameTickDialog.getContentPane().add(jPanel1);

        fpsSliderDialog.getContentPane().setLayout(new java.awt.FlowLayout());

        int fps_min = 0;
        int fps_max = 400;
        jSlider1.setMajorTickSpacing(20);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintTicks(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(jSlider1);

        fpsLabel.setText("FPS: ");
        fpsSliderDialog.getContentPane().add(fpsLabel);

        defaultButton.setText("Default");
        defaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultButtonActionPerformed(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(defaultButton);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(closeButton);

        xPos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xPosStateChanged(evt);
            }
        });

        jLabel2.setText("X Position:");

        jLabel3.setText("Y Position:");

        javax.swing.GroupLayout posDialogLayout = new javax.swing.GroupLayout(posDialog.getContentPane());
        posDialog.getContentPane().setLayout(posDialogLayout);
        posDialogLayout.setHorizontalGroup(
            posDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(posDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(posDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(posDialogLayout.createSequentialGroup()
                        .addComponent(yPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(posDialogLayout.createSequentialGroup()
                        .addComponent(xPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        posDialogLayout.setVerticalGroup(
            posDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, posDialogLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(posDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(45, 45, 45)
                .addGroup(posDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(yPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        jMenuItem2.setText("Save Templates");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Load Templates");
        jMenu1.add(jMenuItem3);

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exitButton);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("New Template");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Add");

        addFishButton.setText("Fish Template");
        addFishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFishButtonActionPerformed(evt);
            }
        });
        jMenu3.add(addFishButton);

        jMenuItem5.setText("Predator Template");
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Bait Template");
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        fpsMenu.setText("Fps");
        fpsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpsMenuActionPerformed(evt);
            }
        });

        increaseFPSButton.setText("Increase FPS");
        increaseFPSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseFPSButtonActionPerformed(evt);
            }
        });
        fpsMenu.add(increaseFPSButton);

        jMenuItem8.setText("Decrease FPS");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        fpsMenu.add(jMenuItem8);

        openFPSSlider.setText("Open FPS Slider");
        openFPSSlider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFPSSliderActionPerformed(evt);
            }
        });
        fpsMenu.add(openFPSSlider);

        jMenuBar1.add(fpsMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        addFishFrame addFrame = new addFishFrame();
        addFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void fpsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpsMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fpsMenuActionPerformed

    private void increaseFPSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseFPSButtonActionPerformed
        // TODO add your handling code here:
        EnviromentPanel.fpsUp();
        frameTickDialog.setVisible(true);
        frameTextField.setText(String.valueOf(EnviromentPanel.getFps()));

    }//GEN-LAST:event_increaseFPSButtonActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
         EnviromentPanel.fpsDown();
         frameTickDialog.setVisible(true);
         frameTextField.setText(String.valueOf(EnviromentPanel.getFps()));
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        frameTickDialog.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addFishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFishButtonActionPerformed
        // TODO add your handling code here:

        BufferedReader br = null;
        Scanner sc = null;
        float scale,maxVelocity;
        int xPos,yPos,stripeNumber,startingEnergy,detectionRadius,energyUsage;
        Color newCreatureColor;
        boolean isSick;
        int r,g,b;
        try {
            sc = new Scanner(new FileReader("config.txt"));
            while(!"Normal_Fish".equals(sc.next())){
                sc.next();
            }
            
            sc.next();
            scale = sc.nextFloat();
            sc.next();
            xPos = sc.nextInt();
            sc.next();
            yPos = sc.nextInt();
            sc.next();
            startingEnergy = sc.nextInt();
            sc.next();
            r= sc.nextInt();
            sc.next();
            g = sc.nextInt();
            sc.next();
            b = sc.nextInt();
            newCreatureColor = new Color(r,g,b);
            sc.next();
            detectionRadius = sc.nextInt();
            sc.next();
            energyUsage = sc.nextInt();
            sc.next();
            maxVelocity = sc.nextFloat();
            sc.next();
            isSick = Boolean.valueOf(sc.next());
            sc.next();
            stripeNumber = sc.nextInt();
            
            EnviromentPanel.generateParameteredFish(scale, newCreatureColor, stripeNumber, xPos, yPos, startingEnergy, isSick, detectionRadius, energyUsage, maxVelocity);
            
        } catch (Exception e) {
            System.err.println("Template not created");
           
        }
          
        
    }//GEN-LAST:event_addFishButtonActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        fpsLabel.setText("Each Frame Rendered in " + String.valueOf(jSlider1.getValue())+ " ms");
        EnviromentPanel.setFPS(jSlider1.getValue());
    }//GEN-LAST:event_jSlider1StateChanged

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        fpsSliderDialog.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void openFPSSliderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFPSSliderActionPerformed
        // TODO add your handling code here:
        fpsSliderDialog.setVisible(true);
    }//GEN-LAST:event_openFPSSliderActionPerformed

    private void defaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultButtonActionPerformed
        // TODO add your handling code here:
        jSlider1.setValue(33);
    }//GEN-LAST:event_defaultButtonActionPerformed

    private void xPosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xPosStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_xPosStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addFishButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton defaultButton;
    private javax.swing.JMenuItem exitButton;
    private javax.swing.JLabel fpsLabel;
    private javax.swing.JMenu fpsMenu;
    private javax.swing.JDialog fpsSliderDialog;
    private javax.swing.JTextField frameTextField;
    private javax.swing.JDialog frameTickDialog;
    private javax.swing.JMenuItem increaseFPSButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JMenuItem openFPSSlider;
    private javax.swing.JDialog posDialog;
    private javax.swing.JSlider xPos;
    private javax.swing.JSlider yPos;
    // End of variables declaration//GEN-END:variables
}
