


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Scanner;

import javax.swing.JFrame;


public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    
    private static String choosenClassName = "_";
    
    public static void setChoosenString( String newStr){
        choosenClassName = newStr;
    }
    
    public static String getChoosenString(){
        return choosenClassName;
    }
    
    public mainFrame() {
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);						//Exits the program when closed
	this.setSize(1920,1080);													//Set frame resolution to 1080p (1920x1080)
	ControlPanel controlPanel = new ControlPanel();
        Dimension panelSize = this.getSize();										//Creates a Dimension type object to pass the screen size values
	EnviromentPanel animPanel = new EnviromentPanel(panelSize,controlPanel);					//Panel size is subject to change
	
	setPreferredSize(panelSize);
		
        
                
		
		
	setLayout(new BorderLayout());
		
	add(animPanel);																//Panel is added
	add(controlPanel,BorderLayout.EAST);
 
	this.setVisible(true);														//Sets the panel visible
		
        
        initComponents();
        
        frameTickDialog.setSize(400,200);
        frameTextField.setFocusable(false);
        fpsSliderDialog.setSize(235, 150);
        fpsLabel.setText("Each Frame Rendered in " + String.valueOf(fpsSlider.getValue())+ " ms");
        baitGenerationRateController.setSize(285, 150);
        baitGenerationLabel.setText("Generates Bait once in 50 frames");
    }

    public void changeRes(int x,int y){this.setSize(x,y);}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameTickDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        frameTextField = new javax.swing.JTextField();
        fpsSliderDialog = new javax.swing.JDialog();
        fpsSlider = new javax.swing.JSlider(0,400,33);
        fpsLabel = new javax.swing.JLabel();
        defaultButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        baitGenerationRateController = new javax.swing.JDialog();
        baitGenerationSlider = new javax.swing.JSlider(1,500,50);
        baitGenerationLabel = new javax.swing.JLabel();
        DefaultButtonBaitGenerator = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        exitButton = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        fpsMenu = new javax.swing.JMenu();
        increaseFPSButton = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        openFPSSlider = new javax.swing.JMenuItem();
        baitGeneratorButton = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        addFishButton = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        addBaitButton = new javax.swing.JMenuItem();

        frameTickDialog.getContentPane().setLayout(new java.awt.FlowLayout());

        jLabel1.setText("Frame Delay Increased To");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        frameTextField.setText("33");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(frameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jButton1)))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(frameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        frameTickDialog.getContentPane().add(jPanel1);

        fpsSliderDialog.getContentPane().setLayout(new java.awt.FlowLayout());

        int fps_min = 0;
        int fps_max = 400;
        fpsSlider.setMajorTickSpacing(20);
        fpsSlider.setMinorTickSpacing(5);
        fpsSlider.setPaintTicks(true);
        fpsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fpsSliderStateChanged(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(fpsSlider);

        fpsLabel.setText("FPS: ");
        fpsSliderDialog.getContentPane().add(fpsLabel);

        defaultButton.setText("Default");
        defaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defaultButtonActionPerformed(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(defaultButton);

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        fpsSliderDialog.getContentPane().add(closeButton);

        baitGenerationSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                baitGenerationSliderStateChanged(evt);
            }
        });

        baitGenerationLabel.setText("Generates Bait");

        DefaultButtonBaitGenerator.setText("Default");
        DefaultButtonBaitGenerator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DefaultButtonBaitGeneratorActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout baitGenerationRateControllerLayout = new javax.swing.GroupLayout(baitGenerationRateController.getContentPane());
        baitGenerationRateController.getContentPane().setLayout(baitGenerationRateControllerLayout);
        baitGenerationRateControllerLayout.setHorizontalGroup(
            baitGenerationRateControllerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(baitGenerationRateControllerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                        .addComponent(baitGenerationSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(baitGenerationRateControllerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                                .addComponent(baitGenerationLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(DefaultButtonBaitGenerator)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                                .addComponent(jButton3)
                                .addGap(71, 71, 71))))))
        );
        baitGenerationRateControllerLayout.setVerticalGroup(
            baitGenerationRateControllerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(baitGenerationRateControllerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(baitGenerationSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(baitGenerationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(baitGenerationRateControllerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DefaultButtonBaitGenerator)
                    .addComponent(jButton3))
                .addContainerGap(204, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");

        exitButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        jMenu1.add(exitButton);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New Template");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        fpsMenu.setText("General");
        fpsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fpsMenuActionPerformed(evt);
            }
        });

        increaseFPSButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_MASK));
        increaseFPSButton.setText("Increase FPS");
        increaseFPSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                increaseFPSButtonActionPerformed(evt);
            }
        });
        fpsMenu.add(increaseFPSButton);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Decrease FPS");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        fpsMenu.add(jMenuItem8);

        openFPSSlider.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        openFPSSlider.setText("FPS Controller");
        openFPSSlider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFPSSliderActionPerformed(evt);
            }
        });
        fpsMenu.add(openFPSSlider);

        baitGeneratorButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        baitGeneratorButton.setText("Bait Generation Controller");
        baitGeneratorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baitGeneratorButtonActionPerformed(evt);
            }
        });
        fpsMenu.add(baitGeneratorButton);

        jMenuBar1.add(fpsMenu);

        jMenu3.setText("Add");

        addFishButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.ALT_MASK));
        addFishButton.setText("Fish Template");
        addFishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFishButtonActionPerformed(evt);
            }
        });
        jMenu3.add(addFishButton);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem5.setText("Predator Template");
        jMenu3.add(jMenuItem5);

        addBaitButton.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        addBaitButton.setText("Bait Template");
        addBaitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBaitButtonActionPerformed(evt);
            }
        });
        jMenu3.add(addBaitButton);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 281, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        CreateTemplateFrame addFrame = new CreateTemplateFrame();
        addFrame.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void fpsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fpsMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fpsMenuActionPerformed

    private void increaseFPSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_increaseFPSButtonActionPerformed
        // TODO add your handling code here:
        EnviromentPanel.fpsUp();
        frameTickDialog.setVisible(true);
        frameTextField.setText(String.valueOf(EnviromentPanel.getFps()));

    }//GEN-LAST:event_increaseFPSButtonActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
         EnviromentPanel.fpsDown();
         frameTickDialog.setVisible(true);
         frameTextField.setText(String.valueOf(EnviromentPanel.getFps()));
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        frameTickDialog.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addFishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFishButtonActionPerformed
        // TODO add your handling code here:

        BufferedReader br = null;
        Scanner sc = null;
        float scale,maxVelocity;
        int xPos,yPos,stripeNumber,startingEnergy,detectionRadius,energyUsage;
        Color newCreatureColor;
        boolean isSick;
        int r,g,b;
        try {
            sc = new Scanner(new FileReader("normalFishconfig.txt"));
            while(!"Normal_Fish".equals(sc.next())){
                sc.next();
            }
            
            sc.next();
            scale = sc.nextFloat();
            sc.next();
            xPos = sc.nextInt();
            sc.next();
            yPos = sc.nextInt();
            sc.next();
            startingEnergy = sc.nextInt();
            sc.next();
            r= sc.nextInt();
            sc.next();
            g = sc.nextInt();
            sc.next();
            b = sc.nextInt();
            newCreatureColor = new Color(r,g,b);
            sc.next();
            detectionRadius = sc.nextInt();
            sc.next();
            energyUsage = sc.nextInt();
            sc.next();
            maxVelocity = sc.nextFloat();
            sc.next();
            isSick = Boolean.valueOf(sc.next());
            sc.next();
            stripeNumber = sc.nextInt();
            
            EnviromentPanel.generateParameteredFish(scale, newCreatureColor, stripeNumber, xPos, yPos, startingEnergy, isSick, detectionRadius, energyUsage, maxVelocity);
            
        } catch (Exception e) {
            System.err.println("Template not created");
           
        }
          
        
    }//GEN-LAST:event_addFishButtonActionPerformed

    private void fpsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fpsSliderStateChanged
        // TODO add your handling code here:
        fpsLabel.setText("Each Frame Rendered in " + String.valueOf(fpsSlider.getValue())+ " ms");
        EnviromentPanel.setFPS(fpsSlider.getValue());
    }//GEN-LAST:event_fpsSliderStateChanged

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        fpsSliderDialog.setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void openFPSSliderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFPSSliderActionPerformed
        // TODO add your handling code here:
        fpsSliderDialog.setVisible(true);
    }//GEN-LAST:event_openFPSSliderActionPerformed

    private void defaultButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defaultButtonActionPerformed
        // TODO add your handling code here:
        fpsSlider.setValue(33);
        EnviromentPanel.setFPS(fpsSlider.getValue());
    }//GEN-LAST:event_defaultButtonActionPerformed

    private void addBaitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBaitButtonActionPerformed
        // TODO add your handling code here:
        BufferedReader br = null;
        Scanner sc = null;
        int r1,g1,b1,r2,g2,b2;
        int size;
        float floatingRange;
        Color color1,color2;
        try {
            sc = new Scanner(new FileReader("baitConfig.txt"));
          
       
            while(!"Bait".equals(sc.next())){
                sc.next();
            }
            sc.next();
            size = sc.nextInt();
            sc.next();
            floatingRange = sc.nextFloat();
            sc.next();
            r1 = sc.nextInt();
            sc.next();
            g1 = sc.nextInt();
            sc.next();
            b1 = sc.nextInt();
            sc.next();
            r2 = sc.nextInt();
            sc.next();
            g2 = sc.nextInt();
            sc.next();
            b2 = sc.nextInt();
            color1 = new Color(r1,g1,b1);
            color2 = new Color(r2,g2,b2);
            
            EnviromentPanel.generateParameteredBait(size, color1, color2, floatingRange);
           
        } catch (Exception e) {
            System.out.print("err");
        }

    }//GEN-LAST:event_addBaitButtonActionPerformed

    private void baitGeneratorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baitGeneratorButtonActionPerformed
        // TODO add your handling code here:
        baitGenerationRateController.setVisible(true);

    }//GEN-LAST:event_baitGeneratorButtonActionPerformed

    private void baitGenerationSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_baitGenerationSliderStateChanged
        // TODO add your handling code here:
        EnviromentPanel.setBaitGenerationRate(baitGenerationSlider.getValue());
        baitGenerationLabel.setText("Generates Bait once in " + EnviromentPanel.getBaitGenerationRate() +  " frames");
         
    }//GEN-LAST:event_baitGenerationSliderStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        baitGenerationRateController.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void DefaultButtonBaitGeneratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DefaultButtonBaitGeneratorActionPerformed
        // TODO add your handling code here:
        EnviromentPanel.setBaitGenerationRate(50);
        baitGenerationLabel.setText("Generates Bait once in " + EnviromentPanel.getBaitGenerationRate() +  " frames");
        baitGenerationSlider.setValue(50);
    }//GEN-LAST:event_DefaultButtonBaitGeneratorActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DefaultButtonBaitGenerator;
    private javax.swing.JMenuItem addBaitButton;
    private javax.swing.JMenuItem addFishButton;
    private javax.swing.JLabel baitGenerationLabel;
    private javax.swing.JDialog baitGenerationRateController;
    private javax.swing.JSlider baitGenerationSlider;
    private javax.swing.JMenuItem baitGeneratorButton;
    private javax.swing.JButton closeButton;
    private javax.swing.JButton defaultButton;
    private javax.swing.JMenuItem exitButton;
    private javax.swing.JLabel fpsLabel;
    private javax.swing.JMenu fpsMenu;
    private javax.swing.JSlider fpsSlider;
    private javax.swing.JDialog fpsSliderDialog;
    private javax.swing.JTextField frameTextField;
    private javax.swing.JDialog frameTickDialog;
    private javax.swing.JMenuItem increaseFPSButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem openFPSSlider;
    // End of variables declaration//GEN-END:variables
}
